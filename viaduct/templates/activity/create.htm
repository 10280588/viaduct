{% from "macros/form.htm" import render_field %}

{% extends "content.htm" %}

{% block content %}

<script src='/static/js/throttle.js'></script>
<script src='/static/js/textarea.dev.js'></script>

<script src='/static/js/datepicker.js'></script>
<script src='/static/js/timepicker.js'></script>
<link href='/static/css/timepicker.css' rel='stylesheet'>
<link href='/static/css/datepicker.css' rel='stylesheet'>

<form action="" method="post" enctype="multipart/form-data">

		{{ form.csrf_token }}

		{{ render_field(form.name, class="span6") }}
		{{ render_field(form.description, class="span6") }}

		<div class="control-group">
			<div class="controls">
				<div class="alert alert-info">
					<b>Tip</b>
					Please select a date and time, using timepickers (click the clock)
				</div>
			</div>
		</div>

		<div class="control-group">
			<span class="control-label">
				Start date + time
			</span>

			<div class="controls form-inline">
				<input value="{{ form.start_time.data.strftime('%Y-%m-%d') }}" type='date' name='start_date' id='start_date' data-date-format="yyyy-mm-dd">

				<div class="input-append bootstrap-timepicker">
					<input value="{{ form.start_time.data.strftime('%H:%M') }}" type='text' name='start_time' id="start_time" class="input-small">
					<span class="add-on"><i class="icon-time"></i></span>
				</div>
			</div>
		</div>

		<div class="control-group">
			<span class="control-label">
				End date + time
			</span>

			<div class="controls form-inline">
				<input value="{{ form.end_time.data.strftime('%Y-%m-%d') }}" type='date' name='end_date' id='end_date' data-date-format="yyyy-mm-dd">

				<div class="input-append bootstrap-timepicker">
					<input value="{{ form.end_time.data.strftime('%H:%M') }}" type='text' name='end_time' id="end_time" class="input-small">
					<span class="add-on"><i class="icon-time"></i></span>
				</div>
			</div>
		</div>

		{{ render_field(form.location) }}
		{{ render_field(form.price) }}

		{% if form.data.picture %}
			<p>Current image:<br>
			<img src="/static/activity_pictures/{{ form.data.picture }}" style="height:200px;width:auto;">
		{% endif %}

		{{ render_field(form.picture) }}

	<div class="control-group">
		<div class="controls">
			<button type="submit" class="btn">Create activity</button>
		</div>
	</div>
</form>

<script src="http://connect.facebook.net/en_US/all.js"></script>

<script>

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '133663613490741', // App ID
    status     : true, // check login status
    cookie     : true, // enable cookies to allow the server to access the session
    xfbml      : true  // parse XFBML
  });

  // Here we subscribe to the auth.authResponseChange JavaScript Event. This event is fired
  // for any auth related change, such as login, logout or session refresh. This means that
  // whenever someone who was previously logged out then logs in, the correct case below 
  // will be handled. 
  FB.Event.subscribe('auth.authResponseChange', function(response) {
    // Here we specify what we do with the response anytime this event occurs. 
    if (response.status === 'connected') {
      // The response object is returned with a status field that lets us know what the current
      // login status of the person is. In this case, we're handling the situation where they 
      // have logged in to the app.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // In this case, the person is logged into Facebook, but not into the app, so we call
      // FB.login() to prompt them to do so. 
      // In real-life usage, you wouldn't want to immediately prompt someone to login 
      // like this, for two reasons:
      // (1) JavaScript created popup windows are blocked by most browsers unless they 
      // result from direct user interaction (such as a mouse click)
      // (2) it is a bad experience to be continually prompted to login upon page load.
      FB.login();
    } else {
      // In this case, the person is not logged into Facebook, so we call the login() 
      // function to prompt them to do so. Note that at this stage there is no indication
      // of whether they are logged into the app. If they aren't then they'll see the Login
      // Dialog right after they login to Facebook. 
      // The same caveats as above apply to the FB.login() call here.
      FB.login();
    }
  });
  };

  // Load the SDK Asynchronously
  (function(d){
   var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement('script'); js.id = id; js.async = true;
   js.src = "//connect.facebook.net/en_US/all.js";
   ref.parentNode.insertBefore(js, ref);
  }(document));

  // Here we are just running a very simple test of the Graph API after login is successful. 
  // This testAPI() function is only called in those cases. 
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/511607232233572/attending', function(response) {
      console.log(response);
    });
  }

$(document).ready(function() {

	// $.post("https://facebook.com/1540367217/events",
	// 	{name:"Fabien zijn test event", start_time: "2013-05-02"},
	// 	function(data) { alert('kak'); console.log(data); }
	// );



	$("textarea").flexible().trigger('keyup');

	$("input, select").keypress(function(event) {
		return event.keyCode != 13;
	});

	// Check www.eyecon.ro/bootstrap-datepicke
	var nowTemp = new Date();
	var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
	
	var checkin = $('#start_date').datepicker({
		onRender: function(date) {return date.valueOf() < now.valueOf() ? 'disabled' : '';}
	}).on('changeDate', function(ev) {
		if (ev.date.valueOf() > checkout.date.valueOf()) {
			var newDate = new Date(ev.date)
			newDate.setDate(newDate.getDate());
			checkout.setValue(newDate);
		}
	
		checkin.hide();
		$('#end_date')[0].focus();
	}).data('datepicker');
	
	var checkout = $('#end_date').datepicker({
		onRender: function(date) {
		return date.valueOf() < checkin.date.valueOf() ? 'disabled' : '';
	}}).on('changeDate', function(ev) {checkout.hide();}).data('datepicker');

	$("#start_time").timepicker({showMeridian:false, defaultTime: "17:00"});
	$("#end_time").timepicker({showMeridian:false, defaultTime: "22:00"});
});
</script>
{% endblock %}

